{"ast":null,"code":"import _regeneratorRuntime from \"/Users/MIAlien/Desktop/React-Github-User-Card/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\nimport getYear from 'date-fns/get_year';\nimport addDays from 'date-fns/add_days';\nimport getDay from 'date-fns/get_day';\nimport getMonth from 'date-fns/get_month';\nimport isAfter from 'date-fns/is_after';\nimport isSameYear from 'date-fns/is_same_year';\nimport parse from 'date-fns/parse';\nimport setDay from 'date-fns/set_day';\nimport subYears from 'date-fns/sub_years';\nimport color from 'tinycolor2';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n} // GitHub theme\n\n\nvar DEFAULT_THEME = {\n  background: 'transparent',\n  text: '#000',\n  grade4: '#196127',\n  grade3: '#239a3b',\n  grade2: '#7bc96f',\n  grade1: '#c6e48b',\n  grade0: '#ebedf0'\n};\nvar NAMESPACE = 'react-github-calendar';\nvar LINE_HEIGHT = 1.5;\nvar MIN_DISTANCE_MONTH_LABELS = 2;\nvar TITLE_SCALE_FACTOR = 1.25;\nvar API_URL = 'https://github-calendar.now.sh/v1/';\nvar DATE_FORMAT = 'YYYY-MM-DD';\n\nfunction getContributionsForDate(data, date) {\n  return data.contributions.find(function (contrib) {\n    return contrib.date === date;\n  });\n}\n\nfunction getContributionCountForLastYear(data) {\n  var contributions = data.contributions;\n  var now = new Date(); // Start date for accumulating the values\n\n  var begin = contributions.findIndex(function (contrib) {\n    return contrib.date === format(now, DATE_FORMAT);\n  }); // No data for today given\n\n  if (begin === -1) {\n    return 0;\n  } // Check if there is data for the day one year past\n\n\n  var end = contributions.findIndex(function (contrib) {\n    return contrib.date === format(subYears(now, 1), DATE_FORMAT);\n  }); // Take the oldest contribution otherwise, if not enough data exists\n\n  if (end === -1) {\n    end = contributions.length - 1;\n  }\n\n  return contributions.slice(begin, end).reduce(function (acc, contrib) {\n    return acc + contrib.count;\n  }, 0);\n}\n\nfunction getContributionCountForYear(data, year) {\n  var yearEntry = data.years.find(function (entry) {\n    return entry.year === String(year);\n  });\n  return yearEntry ? yearEntry.total : 0;\n}\n\nfunction getBlocksForYear(year, data, fullYear) {\n  var now = new Date();\n  var firstDate = fullYear ? subYears(now, 1) : parse(\"\".concat(year, \"-01-01\"));\n  var lastDate = fullYear ? now : parse(\"\".concat(year, \"-12-31\"));\n  var weekStart = firstDate; // The week starts on Sunday - add days to get to next sunday if neccessary\n\n  if (getDay(firstDate) !== 0) {\n    weekStart = addDays(firstDate, getDay(firstDate));\n  } // Fetch graph data for first row (Sundays)\n\n\n  var firstRowDates = [];\n\n  while (weekStart <= lastDate) {\n    var date = format(weekStart, DATE_FORMAT);\n    firstRowDates.push({\n      date: date,\n      info: getContributionsForDate(data, date)\n    });\n    weekStart = setDay(weekStart, 7);\n  } // Add the remainig days per week (column for column)\n\n\n  return firstRowDates.map(function (dateObj) {\n    var dates = [];\n\n    for (var i = 0; i <= 6; i += 1) {\n      var _date = format(setDay(dateObj.date, i), DATE_FORMAT);\n\n      if (isAfter(_date, lastDate)) {\n        break;\n      }\n\n      dates.push({\n        date: _date,\n        info: getContributionsForDate(data, _date)\n      });\n    }\n\n    return dates;\n  });\n}\n\nfunction getMonthLabels(blocks, fullYear) {\n  var previousMonth = 0; // January\n\n  var length = blocks.length;\n  return blocks.slice(0, fullYear ? length - 1 : length).reduce(function (acc, week, x) {\n    var date = parse(week[0].date);\n    var month = getMonth(date) + 1;\n    var monthChanged = month !== previousMonth;\n    var firstMonthIsDec = x === 0 && month === 12;\n\n    if (monthChanged && !firstMonthIsDec) {\n      acc.push({\n        x: x,\n        label: format(date, 'MMM')\n      });\n      previousMonth = month;\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction getGraphDataForYear(year, data, fullYear) {\n  var blocks = getBlocksForYear(year, data, fullYear);\n  var monthLabels = getMonthLabels(blocks, fullYear);\n  var totalCount = fullYear ? getContributionCountForLastYear(data) : getContributionCountForYear(data, year);\n  return {\n    year: year,\n    blocks: blocks,\n    monthLabels: monthLabels,\n    totalCount: totalCount\n  };\n}\n/**\n * Get the GitHub contributions for a specific user\n * @param options\n * @throws {Error} - Throws an error if the request fails or no data is available\n * @return {Promise<{blocks, monthLabels, totalCount}>} - A promise containing the data\n */\n\n\nfunction getGitHubGraphData(_x) {\n  return _getGitHubGraphData.apply(this, arguments);\n}\n\nfunction _getGitHubGraphData() {\n  _getGitHubGraphData = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(options) {\n    var years, fullYear, username, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            years = options.years, fullYear = options.fullYear, username = options.username;\n            _context.next = 3;\n            return fetch(API_URL + username);\n\n          case 3:\n            _context.next = 5;\n            return _context.sent.json();\n\n          case 5:\n            data = _context.sent;\n\n            if (data.years.length) {\n              _context.next = 8;\n              break;\n            }\n\n            throw new Error('No data available');\n\n          case 8:\n            return _context.abrupt(\"return\", years.map(function (year) {\n              var isCurrentYear = isSameYear(parse(String(year)), new Date());\n              return getGraphDataForYear(year, data, isCurrentYear && fullYear);\n            }));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getGitHubGraphData.apply(this, arguments);\n}\n/**\n * Create a calendar color theme based on one color\n * @param {string} baseColor - The base color all lighter hues are calculated from\n * @param {string} textColor - Text color\n * @param {string} emptyCellColor\n * @param {string} background - Calendar background color. `transparent` by default\n * @throws {Error} - Throws an error if the color could not be parsed\n * @return {object} - The color theme object\n */\n\n\nfunction createCalendarTheme(baseColor) {\n  var textColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'inherit';\n  var emptyCellColor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : color('white').darken(8).toHslString();\n  var background = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'transparent';\n  var base = color(baseColor);\n\n  if (!base.isValid()) {\n    return DEFAULT_THEME;\n  }\n\n  var text = color(textColor).isValid() ? color(textColor) : DEFAULT_THEME.text;\n  return {\n    background: background,\n    text: text,\n    grade4: base.setAlpha(0.92).toHslString(),\n    grade3: base.setAlpha(0.76).toHslString(),\n    grade2: base.setAlpha(0.6).toHslString(),\n    grade1: base.setAlpha(0.44).toHslString(),\n    grade0: emptyCellColor\n  };\n}\n\nvar GitHubCalendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GitHubCalendar, _Component);\n\n  function GitHubCalendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GitHubCalendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GitHubCalendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      graphs: null,\n      error: null\n    });\n\n    return _this;\n  }\n\n  _createClass(GitHubCalendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData(this.props);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.username !== prevProps.username) {\n        this.setState({\n          graphs: null,\n          error: false\n        });\n        this.fetchData(this.props);\n      }\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData(_ref) {\n      var _this2 = this;\n\n      var years = _ref.years,\n          username = _ref.username,\n          fullYear = _ref.fullYear;\n      getGitHubGraphData({\n        years: years,\n        username: username,\n        fullYear: fullYear\n      }).then(function (graphs) {\n        return _this2.setState({\n          graphs: graphs\n        });\n      })[\"catch\"](function (error) {\n        return _this2.setState({\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"getTheme\",\n    value: function getTheme() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          theme = _this$props.theme;\n\n      if (typeof color === 'string') {\n        return createCalendarTheme(color);\n      }\n\n      return theme ? Object.assign({}, DEFAULT_THEME, theme) : DEFAULT_THEME;\n    } // Unfortunately there is no support for CSS modules right now...\n\n  }, {\n    key: \"getStyles\",\n    value: function getStyles() {\n      var _this$props2 = this.props,\n          fontSize = _this$props2.fontSize,\n          theme = _this$props2.theme;\n      return {\n        anchor: {\n          color: 'inherit'\n        },\n        chart: {\n          marginBottom: '1rem'\n        },\n        calendar: {\n          maxWidth: '100%',\n          height: 'auto',\n          marginBottom: '0.25rem',\n          backgroundColor: theme.background,\n          overflow: 'visible'\n        },\n        loading: {\n          fontSize: '90%'\n        },\n        meta: {\n          fontSize: fontSize\n        },\n        title: {\n          marginBottom: '0.5rem',\n          paddingBottom: '0.25rem',\n          borderBottom: \"2px solid \".concat(this.getTheme().grade0),\n          fontSize: \"\".concat(Math.round(fontSize * TITLE_SCALE_FACTOR), \"px\")\n        }\n      };\n    }\n  }, {\n    key: \"getClassNameFor\",\n    value: function getClassNameFor(object) {\n      return \"\".concat(NAMESPACE, \"__\").concat(object);\n    }\n  }, {\n    key: \"getDimensions\",\n    value: function getDimensions() {\n      var _this$props3 = this.props,\n          blockMargin = _this$props3.blockMargin,\n          blockSize = _this$props3.blockSize,\n          fontSize = _this$props3.fontSize;\n      var textHeight = Math.round(fontSize * LINE_HEIGHT); // Since weeks start on Sunday, there is a good chance that the graph starts\n      // in the week before January 1st. Therefore, the calendar shows 53 weeks.\n\n      var width = (52 + 1) * (blockSize + blockMargin) - blockMargin;\n      var height = textHeight + (blockSize + blockMargin) * 7 - blockMargin;\n      return {\n        width: width,\n        height: height\n      };\n    }\n  }, {\n    key: \"getTooltipMessage\",\n    value: function getTooltipMessage(day) {\n      var dateFormat = this.props.dateFormat;\n      return \"<strong>\".concat(day.info.count, \" contributions</strong> on \").concat(format(day.date, dateFormat));\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle() {\n      var username = this.props.username;\n      return React.createElement(\"div\", {\n        className: this.getClassNameFor('title'),\n        style: this.getStyles().title\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/\".concat(username),\n        title: \"GitHub profile\",\n        style: this.getStyles().anchor\n      }, \"@\", username, \" on GitHub\"));\n    }\n  }, {\n    key: \"renderMonthLabels\",\n    value: function renderMonthLabels(monthLabels) {\n      var _this3 = this;\n\n      var _this$props4 = this.props,\n          blockSize = _this$props4.blockSize,\n          blockMargin = _this$props4.blockMargin,\n          fontSize = _this$props4.fontSize; // Remove the first month label if there's not enough space to the next one\n      // (end of previous month)\n\n      if (monthLabels[1].x - monthLabels[0].x <= MIN_DISTANCE_MONTH_LABELS) {\n        monthLabels.shift();\n      }\n\n      return monthLabels.map(function (month) {\n        return React.createElement(\"text\", {\n          x: (blockSize + blockMargin) * month.x,\n          y: fontSize,\n          key: month.x,\n          style: {\n            fill: _this3.getTheme().text,\n            fontSize: fontSize\n          }\n        }, month.label);\n      });\n    }\n  }, {\n    key: \"renderBlocks\",\n    value: function renderBlocks(blocks) {\n      var _this4 = this;\n\n      var _this$props5 = this.props,\n          blockSize = _this$props5.blockSize,\n          blockMargin = _this$props5.blockMargin,\n          fontSize = _this$props5.fontSize;\n      var theme = this.getTheme();\n      var textHeight = Math.round(fontSize * LINE_HEIGHT);\n      return blocks.map(function (week) {\n        return week.map(function (day, y) {\n          return React.createElement(\"rect\", {\n            x: \"0\",\n            y: textHeight + (blockSize + blockMargin) * y,\n            width: blockSize,\n            height: blockSize,\n            fill: theme[\"grade\".concat(day.info ? day.info.intensity : 0)],\n            \"data-tip\": day.info && day.info.count ? _this4.getTooltipMessage(day) : null,\n            key: day.date\n          });\n        });\n      }).map(function (week, x) {\n        return React.createElement(\"g\", {\n          key: x,\n          transform: \"translate(\".concat((blockSize + blockMargin) * x, \", 0)\")\n        }, week);\n      });\n    }\n  }, {\n    key: \"renderMeta\",\n    value: function renderMeta(year, totalCount) {\n      var fullYear = this.props.fullYear;\n      var isCurrentYear = getYear(new Date()) === year;\n      return React.createElement(\"div\", {\n        className: this.getClassNameFor('meta'),\n        style: this.getStyles().meta\n      }, isCurrentYear && fullYear ? 'Last year' : year, ' – ', isCurrentYear && !fullYear ? 'So far ' : null, totalCount, \" contributions\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$props6 = this.props,\n          children = _this$props6.children,\n          style = _this$props6.style;\n      var _this$state = this.state,\n          error = _this$state.error,\n          graphs = _this$state.graphs;\n      var styles = this.getStyles();\n\n      var _this$getDimensions = this.getDimensions(),\n          width = _this$getDimensions.width,\n          height = _this$getDimensions.height;\n\n      if (error) {\n        return React.createElement(\"p\", null, \"Error :(\");\n      }\n\n      if (!graphs) {\n        return React.createElement(\"div\", {\n          className: this.getClassNameFor('loading'),\n          style: this.getStyles().loading\n        }, \"Loading \\u2026\");\n      }\n\n      return React.createElement(\"article\", {\n        className: NAMESPACE,\n        style: style\n      }, this.renderTitle(), graphs.map(function (graph, i) {\n        var year = graph.year,\n            blocks = graph.blocks,\n            monthLabels = graph.monthLabels,\n            totalCount = graph.totalCount;\n        return React.createElement(\"div\", {\n          key: year,\n          className: _this5.getClassNameFor('chart'),\n          style: i < graphs.length - 1 ? styles.chart : null\n        }, React.createElement(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: width,\n          height: height,\n          viewBox: \"0 0 \".concat(width, \" \").concat(height),\n          textRendering: \"optimizeLegibility\",\n          className: _this5.getClassNameFor('calendar'),\n          style: styles.calendar\n        }, _this5.renderMonthLabels(monthLabels), _this5.renderBlocks(blocks)), _this5.renderMeta(year, totalCount), children);\n      }));\n    }\n  }]);\n\n  return GitHubCalendar;\n}(Component);\n\nGitHubCalendar.propTypes = {\n  blockSize: PropTypes.number,\n  blockMargin: PropTypes.number,\n  children: PropTypes.node,\n  color: PropTypes.string,\n  dateFormat: PropTypes.string,\n  fontSize: PropTypes.number,\n  fullYear: PropTypes.bool,\n  theme: PropTypes.objectOf(PropTypes.string),\n  username: PropTypes.string.isRequired,\n  years: PropTypes.arrayOf(PropTypes.number)\n};\nGitHubCalendar.defaultProps = {\n  blockSize: 12,\n  blockMargin: 2,\n  color: null,\n  dateFormat: 'MMM D, YYYY',\n  fontSize: 14,\n  fullYear: true,\n  theme: DEFAULT_THEME,\n  years: [Number(format(new Date(), 'YYYY'))]\n};\nexport default GitHubCalendar;","map":{"version":3,"sources":["../src/utils/constants.js","../src/services/contributions.js","../src/utils/index.js","../src/components/GitHubCalendar.js"],"names":["DEFAULT_THEME","background","text","grade4","grade3","grade2","grade1","grade0","NAMESPACE","LINE_HEIGHT","MIN_DISTANCE_MONTH_LABELS","TITLE_SCALE_FACTOR","API_URL","DATE_FORMAT","contrib","contributions","data","now","begin","format","end","subYears","acc","yearEntry","entry","String","firstDate","fullYear","parse","lastDate","weekStart","getDay","addDays","firstRowDates","date","info","getContributionsForDate","setDay","dates","i","dateObj","isAfter","previousMonth","length","blocks","week","month","getMonth","monthChanged","firstMonthIsDec","x","label","getBlocksForYear","monthLabels","getMonthLabels","totalCount","getContributionCountForLastYear","getContributionCountForYear","year","years","username","options","fetch","isCurrentYear","isSameYear","getGraphDataForYear","textColor","emptyCellColor","color","base","GitHubCalendar","Component","graphs","error","prevProps","getGitHubGraphData","theme","createCalendarTheme","Object","fontSize","anchor","chart","marginBottom","calendar","maxWidth","height","backgroundColor","overflow","loading","meta","title","paddingBottom","borderBottom","Math","object","blockMargin","blockSize","textHeight","width","day","dateFormat","fill","getYear","children","style","styles","graph","PropTypes","Number"],"mappings":"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","sourcesContent":["// GitHub theme\nexport const DEFAULT_THEME = {\n  background: 'transparent',\n  text: '#000',\n  grade4: '#196127',\n  grade3: '#239a3b',\n  grade2: '#7bc96f',\n  grade1: '#c6e48b',\n  grade0: '#ebedf0',\n};\n\nexport const NAMESPACE = 'react-github-calendar';\n\nexport const LINE_HEIGHT = 1.5;\nexport const MIN_DISTANCE_MONTH_LABELS = 2;\nexport const TITLE_SCALE_FACTOR = 1.25;\n","// Import modules separately to reduce bundle size\nimport addDays from 'date-fns/add_days';\nimport format from 'date-fns/format';\nimport getDay from 'date-fns/get_day';\nimport getMonth from 'date-fns/get_month';\nimport isAfter from 'date-fns/is_after';\nimport isSameYear from 'date-fns/is_same_year';\nimport parse from 'date-fns/parse';\nimport setDay from 'date-fns/set_day';\nimport subYears from 'date-fns/sub_years';\n\nconst API_URL = 'https://github-calendar.now.sh/v1/';\nconst DATE_FORMAT = 'YYYY-MM-DD';\n\nfunction getContributionsForDate(data, date) {\n  return data.contributions.find(contrib => contrib.date === date);\n}\n\nfunction getContributionCountForLastYear(data) {\n  const { contributions } = data;\n  const now = new Date();\n\n  // Start date for accumulating the values\n  const begin = contributions.findIndex(contrib => contrib.date === format(now, DATE_FORMAT));\n\n  // No data for today given\n  if (begin === -1) {\n    return 0;\n  }\n\n  // Check if there is data for the day one year past\n  let end = contributions.findIndex(contrib => {\n    return contrib.date === format(subYears(now, 1), DATE_FORMAT);\n  });\n\n  // Take the oldest contribution otherwise, if not enough data exists\n  if (end === -1) {\n    end = contributions.length - 1;\n  }\n\n  return contributions.slice(begin, end).reduce((acc, contrib) => acc + contrib.count, 0);\n}\n\nfunction getContributionCountForYear(data, year) {\n  const yearEntry = data.years.find(entry => entry.year === String(year));\n\n  return yearEntry ? yearEntry.total : 0;\n}\n\nfunction getBlocksForYear(year, data, fullYear) {\n  const now = new Date();\n  const firstDate = fullYear ? subYears(now, 1) : parse(`${year}-01-01`);\n  const lastDate = fullYear ? now : parse(`${year}-12-31`);\n\n  let weekStart = firstDate;\n\n  // The week starts on Sunday - add days to get to next sunday if neccessary\n  if (getDay(firstDate) !== 0) {\n    weekStart = addDays(firstDate, getDay(firstDate));\n  }\n\n  // Fetch graph data for first row (Sundays)\n  const firstRowDates = [];\n  while (weekStart <= lastDate) {\n    const date = format(weekStart, DATE_FORMAT);\n\n    firstRowDates.push({\n      date,\n      info: getContributionsForDate(data, date),\n    });\n\n    weekStart = setDay(weekStart, 7);\n  }\n\n  // Add the remainig days per week (column for column)\n  return firstRowDates.map(dateObj => {\n    const dates = [];\n    for (let i = 0; i <= 6; i += 1) {\n      const date = format(setDay(dateObj.date, i), DATE_FORMAT);\n\n      if (isAfter(date, lastDate)) {\n        break;\n      }\n\n      dates.push({\n        date,\n        info: getContributionsForDate(data, date),\n      });\n    }\n\n    return dates;\n  });\n}\n\nfunction getMonthLabels(blocks, fullYear) {\n  let previousMonth = 0; // January\n  const { length } = blocks;\n\n  return blocks.slice(0, fullYear ? length - 1 : length).reduce((acc, week, x) => {\n    const date = parse(week[0].date);\n    const month = getMonth(date) + 1;\n    const monthChanged = month !== previousMonth;\n    const firstMonthIsDec = x === 0 && month === 12;\n\n    if (monthChanged && !firstMonthIsDec) {\n      acc.push({\n        x,\n        label: format(date, 'MMM'),\n      });\n      previousMonth = month;\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction getGraphDataForYear(year, data, fullYear) {\n  const blocks = getBlocksForYear(year, data, fullYear);\n  const monthLabels = getMonthLabels(blocks, fullYear);\n  const totalCount = fullYear\n    ? getContributionCountForLastYear(data)\n    : getContributionCountForYear(data, year);\n\n  return {\n    year,\n    blocks,\n    monthLabels,\n    totalCount,\n  };\n}\n\n/**\n * Get the GitHub contributions for a specific user\n * @param options\n * @throws {Error} - Throws an error if the request fails or no data is available\n * @return {Promise<{blocks, monthLabels, totalCount}>} - A promise containing the data\n */\nexport async function getGitHubGraphData(options) {\n  const { years, fullYear, username } = options;\n  const data = await (await fetch(API_URL + username)).json();\n\n  if (!data.years.length) {\n    throw new Error('No data available');\n  }\n\n  return years.map(year => {\n    const isCurrentYear = isSameYear(parse(String(year)), new Date());\n\n    return getGraphDataForYear(year, data, isCurrentYear && fullYear);\n  });\n}\n","import color from 'tinycolor2';\n\nimport { DEFAULT_THEME } from './constants';\n\n/**\n * Create a calendar color theme based on one color\n * @param {string} baseColor - The base color all lighter hues are calculated from\n * @param {string} textColor - Text color\n * @param {string} emptyCellColor\n * @param {string} background - Calendar background color. `transparent` by default\n * @throws {Error} - Throws an error if the color could not be parsed\n * @return {object} - The color theme object\n */\nexport function createCalendarTheme(\n  baseColor,\n  textColor = 'inherit',\n  emptyCellColor = color('white')\n    .darken(8)\n    .toHslString(),\n  background = 'transparent',\n) {\n  const base = color(baseColor);\n\n  if (!base.isValid()) {\n    return DEFAULT_THEME;\n  }\n\n  const text = color(textColor).isValid() ? color(textColor) : DEFAULT_THEME.text;\n\n  return {\n    background,\n    text,\n    grade4: base.setAlpha(0.92).toHslString(),\n    grade3: base.setAlpha(0.76).toHslString(),\n    grade2: base.setAlpha(0.6).toHslString(),\n    grade1: base.setAlpha(0.44).toHslString(),\n    grade0: emptyCellColor,\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import modules separately to reduce bundle size\nimport format from 'date-fns/format';\nimport getYear from 'date-fns/get_year';\n\nimport {\n  DEFAULT_THEME,\n  LINE_HEIGHT,\n  MIN_DISTANCE_MONTH_LABELS,\n  NAMESPACE,\n  TITLE_SCALE_FACTOR,\n} from '../utils/constants';\nimport { getGitHubGraphData } from '../services/contributions';\nimport { createCalendarTheme } from '../utils';\n\nclass GitHubCalendar extends Component {\n  state = {\n    graphs: null,\n    error: null,\n  };\n\n  componentDidMount() {\n    this.fetchData(this.props);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.username !== prevProps.username) {\n      this.setState({\n        graphs: null,\n        error: false,\n      });\n      this.fetchData(this.props);\n    }\n  }\n\n  fetchData({ years, username, fullYear }) {\n    getGitHubGraphData({\n      years,\n      username,\n      fullYear,\n    })\n      .then(graphs => this.setState({ graphs }))\n      .catch(error => this.setState({ error }));\n  }\n\n  getTheme() {\n    const { color, theme } = this.props;\n\n    if (typeof color === 'string') {\n      return createCalendarTheme(color);\n    }\n\n    return theme ? Object.assign({}, DEFAULT_THEME, theme) : DEFAULT_THEME;\n  }\n\n  // Unfortunately there is no support for CSS modules right now...\n  getStyles() {\n    const { fontSize, theme } = this.props;\n\n    return {\n      anchor: {\n        color: 'inherit',\n      },\n      chart: {\n        marginBottom: '1rem',\n      },\n      calendar: {\n        maxWidth: '100%',\n        height: 'auto',\n        marginBottom: '0.25rem',\n        backgroundColor: theme.background,\n        overflow: 'visible',\n      },\n      loading: {\n        fontSize: '90%',\n      },\n      meta: {\n        fontSize,\n      },\n      title: {\n        marginBottom: '0.5rem',\n        paddingBottom: '0.25rem',\n        borderBottom: `2px solid ${this.getTheme().grade0}`,\n        fontSize: `${Math.round(fontSize * TITLE_SCALE_FACTOR)}px`,\n      },\n    };\n  }\n\n  getClassNameFor(object) {\n    return `${NAMESPACE}__${object}`;\n  }\n\n  getDimensions() {\n    const { blockMargin, blockSize, fontSize } = this.props;\n\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n\n    // Since weeks start on Sunday, there is a good chance that the graph starts\n    // in the week before January 1st. Therefore, the calendar shows 53 weeks.\n    const width = (52 + 1) * (blockSize + blockMargin) - blockMargin;\n    const height = textHeight + (blockSize + blockMargin) * 7 - blockMargin;\n\n    return { width, height };\n  }\n\n  getTooltipMessage(day) {\n    const { dateFormat } = this.props;\n\n    return `<strong>${day.info.count} contributions</strong> on ${format(day.date, dateFormat)}`;\n  }\n\n  renderTitle() {\n    const { username } = this.props;\n\n    return (\n      <div className={this.getClassNameFor('title')} style={this.getStyles().title}>\n        <a\n          href={`https://github.com/${username}`}\n          title=\"GitHub profile\"\n          style={this.getStyles().anchor}\n        >\n          @{username} on GitHub\n        </a>\n      </div>\n    );\n  }\n\n  renderMonthLabels(monthLabels) {\n    const { blockSize, blockMargin, fontSize } = this.props;\n\n    // Remove the first month label if there's not enough space to the next one\n    // (end of previous month)\n    if (monthLabels[1].x - monthLabels[0].x <= MIN_DISTANCE_MONTH_LABELS) {\n      monthLabels.shift();\n    }\n\n    return monthLabels.map(month => (\n      <text\n        x={(blockSize + blockMargin) * month.x}\n        y={fontSize}\n        key={month.x}\n        style={{\n          fill: this.getTheme().text,\n          fontSize,\n        }}\n      >\n        {month.label}\n      </text>\n    ));\n  }\n\n  renderBlocks(blocks) {\n    const { blockSize, blockMargin, fontSize } = this.props;\n\n    const theme = this.getTheme();\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n\n    return blocks\n      .map(week =>\n        week.map((day, y) => (\n          <rect\n            x=\"0\"\n            y={textHeight + (blockSize + blockMargin) * y}\n            width={blockSize}\n            height={blockSize}\n            fill={theme[`grade${day.info ? day.info.intensity : 0}`]}\n            data-tip={day.info && day.info.count ? this.getTooltipMessage(day) : null}\n            key={day.date}\n          />\n        )),\n      )\n      .map((week, x) => (\n        <g key={x} transform={`translate(${(blockSize + blockMargin) * x}, 0)`}>\n          {week}\n        </g>\n      ));\n  }\n\n  renderMeta(year, totalCount) {\n    const { fullYear } = this.props;\n    const isCurrentYear = getYear(new Date()) === year;\n\n    return (\n      <div className={this.getClassNameFor('meta')} style={this.getStyles().meta}>\n        {isCurrentYear && fullYear ? 'Last year' : year}\n        {' – '}\n        {isCurrentYear && !fullYear ? 'So far ' : null}\n        {totalCount} contributions\n      </div>\n    );\n  }\n\n  render() {\n    const { children, style } = this.props;\n    const { error, graphs } = this.state;\n\n    const styles = this.getStyles();\n\n    const { width, height } = this.getDimensions();\n\n    if (error) {\n      return <p>Error :(</p>;\n    }\n\n    if (!graphs) {\n      return (\n        <div className={this.getClassNameFor('loading')} style={this.getStyles().loading}>\n          Loading …\n        </div>\n      );\n    }\n\n    return (\n      <article className={NAMESPACE} style={style}>\n        {this.renderTitle()}\n        {graphs.map((graph, i) => {\n          const { year, blocks, monthLabels, totalCount } = graph;\n\n          return (\n            <div\n              key={year}\n              className={this.getClassNameFor('chart')}\n              style={i < graphs.length - 1 ? styles.chart : null}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={width}\n                height={height}\n                viewBox={`0 0 ${width} ${height}`}\n                textRendering=\"optimizeLegibility\"\n                className={this.getClassNameFor('calendar')}\n                style={styles.calendar}\n              >\n                {this.renderMonthLabels(monthLabels)}\n                {this.renderBlocks(blocks)}\n              </svg>\n\n              {this.renderMeta(year, totalCount)}\n              {children}\n            </div>\n          );\n        })}\n      </article>\n    );\n  }\n}\n\nGitHubCalendar.propTypes = {\n  blockSize: PropTypes.number,\n  blockMargin: PropTypes.number,\n  children: PropTypes.node,\n  color: PropTypes.string,\n  dateFormat: PropTypes.string,\n  fontSize: PropTypes.number,\n  fullYear: PropTypes.bool,\n  theme: PropTypes.objectOf(PropTypes.string),\n  username: PropTypes.string.isRequired,\n  years: PropTypes.arrayOf(PropTypes.number),\n};\n\nGitHubCalendar.defaultProps = {\n  blockSize: 12,\n  blockMargin: 2,\n  color: null,\n  dateFormat: 'MMM D, YYYY',\n  fontSize: 14,\n  fullYear: true,\n  theme: DEFAULT_THEME,\n  years: [Number(format(new Date(), 'YYYY'))],\n};\n\nexport default GitHubCalendar;\n"]},"metadata":{},"sourceType":"module"}